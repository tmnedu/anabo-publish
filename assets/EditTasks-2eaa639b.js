import{d as y,o as l,a as r,w as k,v as f,b as n,r as m,c as p,u as M,j as w,e as a,i as C,t as T,F as b,f as h,k as $,g as L}from"./index-10a5dc2e.js";import{f as c}from"./index-e5c8bbfe.js";const B={class:"task"},D=y({__name:"AdminTaskRow",props:{task:null},setup(d){return(t,o)=>(l(),r("div",B,[k(n("input",{style:{padding:"8px"},"onUpdate:modelValue":o[0]||(o[0]=e=>d.task.title=e)},null,512),[[f,d.task.title]]),n("button",{style:{padding:"8px"},onClick:o[1]||(o[1]=e=>t.$emit("remove"))},"Удалить")]))}}),R={style:{"margin-bottom":"12px"}},V=n("h1",null,"Выбрать месяц:",-1),S={style:{display:"flex","justify-content":"center","align-items":"center"}},j={key:0,textContent:"Производится сохранение ⌛"},E={key:1,textContent:"Задачи сохранены ✔️"},A=y({__name:"EditTasks",setup(d){let t=m(c(new Date,"yyyy-MM"));const o=p(()=>c(new Date(t.value),"LLLL yyyy"));let e=m("none");const u=M(),g=p(()=>u.getMonthTasks(t.value));async function _(){e.value="saving",await u.saveTasks(),e.value="saved"}async function x(v){e.value="saving",await u.removeTask(v),e.value="saved"}return w(()=>e.value="none"),(v,i)=>(l(),r("div",null,[n("div",R,[V,k(n("input",{"onUpdate:modelValue":i[0]||(i[0]=s=>C(t)?t.value=s:t=s),type:"month"},null,512),[[f,a(t)]])]),n("h1",null,"Управление задачами на "+T(a(o)),1),(l(!0),r(b,null,h(a(g),s=>(l(),L(D,{key:s.id,task:s,onRemove:F=>x(s.id)},null,8,["task","onRemove"]))),128)),n("div",S,[n("button",{style:{padding:"8px",margin:"auto"},onClick:i[1]||(i[1]=s=>a(u).newTask(a(t)))}," Добавить новую задачу ")]),n("button",{onClick:i[2]||(i[2]=s=>_()),class:"big-button",textContent:"Сохранить"}),a(e)=="saving"?(l(),r("span",j)):a(e)=="saved"?(l(),r("span",E)):$("",!0)]))}});export{A as default};
